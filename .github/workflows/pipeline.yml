name: test

on: 
  push:
    tags: 
      - v*
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Set up Environment  # always: replace package name
      id: prep
      run: |
        python -m pip install -q --upgrade pip setuptools
        pip install -q pipenv
        pipenv install -d
        echo "::set-env name=package::release_py"
    - name: Flake8
      if: ${{ github.ref == 'refs/heads/master' }}
      id: flake8
      run : pipenv run flake8 --doctests --max-doc-length 72 ${{ env.package }}
    - name: Pylint
      if: ${{ github.ref == 'refs/heads/master' }}
      id: pylint
      run: pipenv run pylint -f colorized ${{ env.package }} || pipenv run pylint-exit -efail -wfail $?
    - name: Build  # on windows: replace var assignment and dist path 
      id: build
      run: |
        python setup.py -q sdist
        name=$(python setup.py --name)
        version=$(python setup.py --version)
        sdist=./dist/${name}-${version}.tar.gz
        echo "::set-env name=name::${name}"
        echo "::set-env name=sdist::${sdist}"
    - name: Deploy
      id: deploy
      run: python -m pip install ${{ env.sdist }}
    - name: Release
      if: ${{ startsWith( github.ref, 'refs/tags/v' ) }}
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ env.name }} ${{ github.ref }}
    - name: Upload
      if: ${{ startsWith( github.ref, 'refs/tags/v' ) }}
      id: upload
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ${{ env.sdist }}
        asset_name: ${{ env.name }}.tar.gz
        asset_content_type: application/gzip
